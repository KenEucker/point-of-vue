type Tokens {
  auth0: String
  github: String
  imgur: String
  google: String
}

type ImgurAccount {
  id: String!
  name: String
  avatar: String
  bio: String
  city: String
  country: String
  timezone: String
}

type GoogleAccount {
  id: String!
  email: String
  email_verified: Boolean
  name: String
  avatar: String
  city: String
  country: String
  timezone: String
}

type GitHubAccount {
  id: String!
  databaseId: Int
  email: String
  name: String
  avatar: String
  website: String
  bio: String
  city: String
  country: String
  timezone: String
  profile: String
  company: String
  location: String
  url: String
  status: String
  sponsorsListing: String
  isBountyHunter: Boolean
  isCampusExpert: Boolean
  isDeveloperProgramMember: Boolean
  isEmployee: Boolean
  isFollowingViewer: Boolean
  isHireable: Boolean
  isGitHubStar: Boolean
  isSiteAdmin: Boolean
  followers: Int
  following: Int
  packages: Int
  repositories: Int
  repositoriesContributedTo: Int
  sponsors: Int
  sponsoring: Int
  starredRepositories: Int
}

type RequestorMirror {
  id: String
  ip: String
  token: String
  email: String
  github: GitHubAccount
  imgur: ImgurAccount
  google: GoogleAccount
}

type CreatorAccount {
  requestor: RequestorMirror!
  creator: Creator
  authentication: Tokens
}

# Github Integration
type VueComponent {
  oid: String!
  title: String
  vue: String
  template: String
  script: String
  query: String
}

# Imgur Integration
type ImgurAlbum {
  id: String!
  link: String!
  title: String
  description: String
  deletehash: String
  cover: String
  privacy: String
  images: [ImgurImage]
  images_count: Int
  order: String
  datetime: Date
}

type ImgurImage {
  id: String!
  link: String!
  title: String
  description: String
  deletehash: String
  datetime: Date
}

# Google Integration
type Docule {
  id: String!
  link: String!
  title: String
}

type Creator {
  id: Int!
  handle: String!
  email: String!
  
  tags: [Tag!]
  permissions: [Permissions!]
  posts: [Post!]
  groups: [Group!]
  interactions: [Interaction!]
  templates: [Template]
  template: ActiveTemplate
  vues: [Vue]
  vue: [ActiveVue]

  name: String!
  avatar: String!
  bio: String
  verified: Boolean
  banner: String
  status: String
  website: String
  location: String
  chosenday: String
  subs: [String]

  createdAt: Date
  updatedAt: Date
}

type Group {
  id: Int!

  creators: [Creator]
  tags: [Tag]

  title: String!

  createdAt: Date
  updatedAt: Date
}

type Interaction {
  id: Int!

  creator: Creator!
  post: Post!
  
  text: String
  like: Boolean
  love: Boolean
  repost: Boolean
  share: Boolean
  
  createdAt: Date
  updatedAt: Date
}

type Post {
  id: Int!
  
  creator: Creator!
  interactions: [Interaction!]
  tags: [Tag!]
  
  title: String!
  published: Boolean
  text: String
  status: String
  media: [String]
  
  createdAt: Date
  updatedAt: Date
}

type Template {
  id: Int!
  
  creator: Creator!
  activations: [ActiveTemplate]
  tags: [Tag]

  title: String!
  published: Boolean
  code: String!
  status: String
  version: String
  compatibility: String
  license: String
  palette: [String]
  media: [String]
  
  createdAt: Date
  updatedAt: Date
}

type Vue {
  oid: String!
  
  creator: Creator!
  activations: [ActiveVue]
  tags: [Tag]

  title: String!
  status: String
  version: String
  compatibility: String
  license: String
  
  createdAt: Date
  updatedAt: Date
}

type ActiveTemplate {
  id: Int!
  
  creator: Creator!
  template: Template!
  
  title: String!
  palette: [String]
  media: [String]

  assignedAt: Date
}

type ActiveVue {
  id: Int!
  
  creator: Creator!
  vue: Vue

  assignedAt: Date
}

type Tag {
  id: Int!
  text: String!
  
  creators: [Creator]
  post: [Post]
  templates: [Template]
  vues: [Vue]
  
  createdAt: Date
  updatedAt: Date
}