// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator class_validator {
  provider = "prisma-class-validator-generator"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Permissions {
  READ
  WRITE
  LOGIN
  INTERACT
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
  PUBLISHED
  UNPUBLISHED
}

model Creator {
  id     Int    @id @default(autoincrement())
  handle String @unique
  email  String @unique

  posts        Post[]
  permissions  Permissions[]
  interactions Interaction[]
  templates    Template[]
  vues         Vue[]
  vue          ActiveVue[]
  template     ActiveTemplate?

  name      String   @default("")
  avatar    String   @default("")
  bio       String   @default("")
  verified  Boolean  @default(false)
  banner    String   @default("")
  status    String   @default("")
  website   String   @default("")
  location  String   @default("")
  chosenday String   @default("")
  subs      String[] @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interaction {
  id Int @id @default(autoincrement())

  creator Creator @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  post    Post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  text   String  @default("")
  like   Boolean @default(false)
  love   Boolean @default(false)
  repost Boolean @default(false)
  share  Boolean @default(false)

  postId    Int
  creatorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([creatorId, postId])
}

model Post {
  id Int @id @default(autoincrement())

  creator      Creator       @relation(fields: [creatorId], references: [id])
  interactions Interaction[]
  tags         TagsOnPosts[]

  title     String
  published Boolean  @default(false)
  text      String   @default("")
  status    String   @default("")
  media     String[] @default([])

  creatorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([creatorId, title])
}

model Template {
  id Int @id @default(autoincrement())

  creator     Creator           @relation(fields: [creatorId], references: [id])
  tags        TagsOnTemplates[]
  activations ActiveTemplate[]

  title     String
  published Boolean  @default(false)
  code      String   @default("")
  status    String   @default("")
  palette   String[] @default([])
  media     String[] @default([])

  creatorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([creatorId, title])
}

model Vue {
  id Int @id @default(autoincrement())

  creator     Creator      @relation(fields: [creatorId], references: [id])
  tags        TagsOnVues[]
  activations ActiveVue[]

  title     String
  published Boolean @default(false)
  code      String  @default("")
  status    String  @default("")

  creatorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([creatorId, title])
}

model ActiveTemplate {
  creator  Creator  @relation(fields: [creatorId], references: [id])
  template Template @relation(fields: [templateId], references: [id])

  palette String[] @default([])
  media   String[] @default([])

  creatorId  Int
  templateId Int

  @@id([creatorId])
}

model ActiveVue {
  creator Creator @relation(fields: [creatorId], references: [id])
  vue     Vue     @relation(fields: [vueId], references: [id])

  creatorId Int
  vueId     Int

  @@id([creatorId])
}

model Tag {
  id   Int    @id @default(autoincrement())
  text String @unique

  posts     TagsOnPosts     @relation(fields: [tagsOnPostsPostId], references: [postId])
  templates TagsOnTemplates @relation(fields: [tagsOnTemplatesTemplateId], references: [templateId])
  vues      TagsOnVues      @relation(fields: [tagsOnVuesVueId], references: [vueId])

  tagsOnPostsPostId         Int
  tagsOnTemplatesTemplateId Int
  tagsOnVuesVueId           Int
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
}

model TagsOnPosts {
  post Post  @relation(fields: [postId], references: [id])
  Tag  Tag[]

  postId     Int
  assignedAt DateTime @default(now())

  @@id([postId])
}

model TagsOnTemplates {
  template Template @relation(fields: [templateId], references: [id])
  tags     Tag[]

  templateId Int
  assignedAt DateTime @default(now())

  @@id([templateId])
}

model TagsOnVues {
  vue  Vue   @relation(fields: [vueId], references: [id])
  tags Tag[]

  vueId      Int
  assignedAt DateTime @default(now())

  @@id([vueId])
}
