// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator class_validator {
  provider = "prisma-class-validator-generator"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Permissions {
  READ
  WRITE
  LOGIN
  INTERACT
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
  PUBLISHED
  UNPUBLISHED
}

model Creator {
  id           Int           @id @default(autoincrement())
  handle       String        @unique
  email        String        @unique
  verified     Boolean       @default(false)
  subs         String[]      @default([])
  posts        Post[]
  permissions  Permissions[]
  interactions Interaction[]
  name         String        @default("")
  avatar       String        @default("")
  banner       String        @default("")
  status       String        @default("")
  bio          String        @default("")
  website      String        @default("")
  location     String        @default("")
  birthday     String        @default("")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Interaction {
  id        Int      @id @default(autoincrement())
  creator   Creator  @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId Int
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  text      String   @default("")
  like      Boolean  @default(false)
  love      Boolean  @default(false)
  repost    Boolean  @default(false)
  share     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([creatorId, postId])
}

model Post {
  id           Int           @id @default(autoincrement())
  creator      Creator       @relation(fields: [creatorId], references: [id])
  interactions Interaction[]
  creatorId    Int
  title        String
  published    Boolean       @default(false)
  text         String        @default("")
  status       String        @default("")
  media        String[]      @default([])
  TagsOnPosts  TagsOnPosts[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([creatorId, title])
}

model Tag {
  id                Int         @id @default(autoincrement())
  text              String      @unique
  posts             TagsOnPosts @relation(fields: [tagsOnPostsPostId], references: [postId])
  tagsOnPostsPostId Int
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model TagsOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  assignedAt DateTime @default(now())
  Tag        Tag[]

  @@id([postId])
}
